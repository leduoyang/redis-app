<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.leduo.backend.data.dao.ITaskDao">
    <resultMap id="taskResultMap" type="com.leduo.backend.data.dto.TaskDto">
        <id property="taskId" column="task_id"/>
        <result property="taskName" column="task_name"/>
        <result property="description" column="description"/>
        <result property="status" column="status"/>
        <result property="priority" column="priority"/>
        <result property="dueDate" column="due_date"/>
        <result property="createdAt" column="created_at"/>
        <result property="updatedAt" column="updated_at"/>
        <association property="assignedTo" javaType="com.leduo.backend.data.entity.User">
            <id property="userId" column="user_id"/>
            <result property="username" column="username"/>
            <result property="role" column="role"/>
        </association>
        <association property="project" javaType="com.leduo.backend.data.entity.Project">
            <id property="projectId" column="project_id"/>
            <result property="projectName" column="project_name"/>
            <result property="description" column="project_description"/>
        </association>
    </resultMap>

    <insert id="createTask" parameterType="com.leduo.backend.data.entity.Task" useGeneratedKeys="true" keyProperty="taskId">
        INSERT INTO task (task_name, due_date, priority, status, assigned_to, description, project_id, created_at)
        VALUES (#{taskName}, #{dueDate}, #{priority}, #{status}, #{assignedTo.userId}, #{description}, #{project.projectId}, CURRENT_TIMESTAMP)
    </insert>

    <select id="getTaskById" resultMap="taskResultMap">
        SELECT t.*, u.username, u.role, p.project_name, p.description AS project_description
        FROM task t
        LEFT JOIN user u ON t.assigned_to = u.user_id
        LEFT JOIN project p ON t.project_id = p.project_id
        WHERE t.task_id = #{taskId}
    </select>

    <select id="getTasksByProject" resultMap="taskResultMap">
        SELECT t.*, u.username, u.role, p.project_name, p.description AS project_description
        FROM task t
        LEFT JOIN user u ON t.assigned_to = u.user_id
        LEFT JOIN project p ON t.project_id = p.project_id
        WHERE t.project_id = #{projectId}
        ORDER BY t.priority ASC, t.updated_at DESC
    </select>

    <select id="getAllTasks" resultMap="taskResultMap">
        SELECT t.*, u.username, u.role, p.project_name, p.description AS project_description
        FROM task t
        LEFT JOIN user u ON t.assigned_to = u.user_id
        LEFT JOIN project p ON t.project_id = p.project_id
        ORDER BY t.priority ASC, t.updated_at DESC
    </select>

    <update id="updateTask" parameterType="com.leduo.backend.data.entity.Task">
        UPDATE task
        SET task_name = #{taskName},
        description = #{description},
        status = #{status},
        priority = #{priority},
        due_date = #{dueDate},
        assigned_to = #{assignedTo.userId},
        updated_at = CURRENT_TIMESTAMP
        WHERE task_id = #{taskId}
    </update>

    <delete id="deleteTask">
        DELETE FROM task
        WHERE task_id = #{taskId}
    </delete>
</mapper>